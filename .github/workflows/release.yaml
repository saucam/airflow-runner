on: 
  release:
    types: [created]

jobs:
  releases-matrix:
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin]
        goarch: [amd64]  
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Read version from release.json
      uses: notiz-dev/github-action-json-property@release
      id: package_info
      with:
        path: 'release.json'
        prop_path: 'version'

    - name: Read go_version from release.json
      uses: notiz-dev/github-action-json-property@release
      id: go_version
      with:
        path: 'release.json'
        prop_path: 'go_version'

    - name: Create release
      id: create_release
      uses: wangyoucao577/go-release-action@v1.22
      with:
        github_token: ${{ secrets.TOKEN }}
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        goversion: "https://dl.google.com/go/go${{ steps.go_version.outputs.prop }}.linux-amd64.tar.gz" 
        pre_command: "go get -v -t -d ./... "  
        release_tag: "v${{ steps.package_info.outputs.prop }}"
